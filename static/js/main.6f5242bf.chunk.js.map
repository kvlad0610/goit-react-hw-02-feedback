{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.jsx","Components/Statistics/Statistics.jsx","Components/Notification/Notification.jsx","Components/Section/Section.jsx","App.js","index.js","Components/FeedbackOptions/FeedbackOptions.module.css"],"names":["FeedbackOptions","onEddGood","onEddNeutral","onEddBad","onClick","className","styles","button","Statistics","good","neutral","bad","onCountTotalFeedback","onCountPositiveFeedbackPercentage","Notification","Section","App","state","eddGood","setState","prevState","eddNeutral","eddBad","this","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gQAgBeA,EAdS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,SAA5B,OACtB,gCACE,wBAAQC,QAASH,EAAWI,UAAWC,IAAOC,OAA9C,kBAGA,wBAAQH,QAASF,EAAcG,UAAWC,IAAOC,OAAjD,qBAGA,wBAAQH,QAASD,EAAUE,UAAWC,IAAOC,OAA7C,qBCMWC,EAhBI,SAAC,GAAD,IACjBC,EADiB,EACjBA,KACAC,EAFiB,EAEjBA,QACAC,EAHiB,EAGjBA,IACAC,EAJiB,EAIjBA,qBACAC,EALiB,EAKjBA,kCALiB,OAOjB,gCACE,sCAASJ,KACT,yCAAYC,KACZ,qCAAQC,KACR,uCAAUC,KACV,mDAAsBC,EAAtB,WCVWC,EAFM,kBAAM,mDCoCZC,EAhCC,SAAC,GAAD,IACdN,EADc,EACdA,KACAC,EAFc,EAEdA,QACAC,EAHc,EAGdA,IACAV,EAJc,EAIdA,UACAC,EALc,EAKdA,aACAC,EANc,EAMdA,SACAS,EAPc,EAOdA,qBACAC,EARc,EAQdA,kCARc,OAUd,gCACE,uDACA,cAAC,EAAD,CACEZ,UAAWA,EACXC,aAAcA,EACdC,SAAUA,IAEZ,4CAC0B,IAAzBS,EACC,cAAC,EAAD,IAEA,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,qBAAsBA,EACtBC,kCAAmCA,QCgC5BG,G,kNAxDbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,QAAU,WACR,EAAKC,UAAS,SAAAC,GACZ,MAAO,CACLX,KAAMW,EAAUX,KAAO,O,EAK7BY,WAAa,WACX,EAAKF,UAAS,SAAAC,GACZ,MAAO,CACLV,QAASU,EAAUV,QAAU,O,EAKnCY,OAAS,WACP,EAAKH,UAAS,SAAAC,GACZ,MAAO,CACLT,IAAKS,EAAUT,IAAM,O,4CAK3B,WAAU,IAAD,EACwBY,KAAKN,MAA5BR,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACfO,EAAgCK,KAAhCL,QAASG,EAAuBE,KAAvBF,WAAYC,EAAWC,KAAXD,OAEvBE,EAAqBf,EAAOC,EAAUC,EAEtCc,GAA0D,IAAvBD,EACrC,EACQ,IAAPf,EAAce,GACjBE,UAEF,OACE,cAAC,EAAD,CACEjB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLV,UAAWiB,EACXhB,aAAcmB,EACdlB,SAAUmB,EACVV,qBAAsBY,EACtBX,kCAAmCY,Q,GAnDzBE,cCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.6f5242bf.chunk.js","sourcesContent":["import styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ onEddGood, onEddNeutral, onEddBad }) => (\r\n  <div>\r\n    <button onClick={onEddGood} className={styles.button}>\r\n      Good\r\n    </button>\r\n    <button onClick={onEddNeutral} className={styles.button}>\r\n      Neutral\r\n    </button>\r\n    <button onClick={onEddBad} className={styles.button}>\r\n      Bed\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n","const Statistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  onCountTotalFeedback,\r\n  onCountPositiveFeedbackPercentage,\r\n}) => (\r\n  <div>\r\n    <p>Good:{good}</p>\r\n    <p>Neutral:{neutral}</p>\r\n    <p>Bed:{bad}</p>\r\n    <p>Total:{onCountTotalFeedback}</p>\r\n    <p>Positive Feedback:{onCountPositiveFeedbackPercentage}%</p>\r\n  </div>\r\n);\r\n\r\nexport default Statistics;\r\n","const Notification = () => <p>No feedback given</p>;\r\n\r\nexport default Notification;\r\n","import FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport Notification from '../Notification/Notification';\r\n\r\nconst Section = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  onEddGood,\r\n  onEddNeutral,\r\n  onEddBad,\r\n  onCountTotalFeedback,\r\n  onCountPositiveFeedbackPercentage,\r\n}) => (\r\n  <div>\r\n    <h1>Please leave feedback</h1>\r\n    <FeedbackOptions\r\n      onEddGood={onEddGood}\r\n      onEddNeutral={onEddNeutral}\r\n      onEddBad={onEddBad}\r\n    />\r\n    <h2>Statistics</h2>\r\n    {onCountTotalFeedback === 0 ? (\r\n      <Notification />\r\n    ) : (\r\n      <Statistics\r\n        good={good}\r\n        neutral={neutral}\r\n        bad={bad}\r\n        onCountTotalFeedback={onCountTotalFeedback}\r\n        onCountPositiveFeedbackPercentage={onCountPositiveFeedbackPercentage}\r\n      />\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default Section;\r\n","import { Component } from 'react';\n// import Feedback from './Components/Feedback/Feedback';\nimport Section from './Components/Section/Section';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  eddGood = () => {\n    this.setState(prevState => {\n      return {\n        good: prevState.good + 1,\n      };\n    });\n  };\n\n  eddNeutral = () => {\n    this.setState(prevState => {\n      return {\n        neutral: prevState.neutral + 1,\n      };\n    });\n  };\n\n  eddBad = () => {\n    this.setState(prevState => {\n      return {\n        bad: prevState.bad + 1,\n      };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const { eddGood, eddNeutral, eddBad } = this;\n\n    const countTotalFeedback = good + neutral + bad;\n\n    const countPositiveFeedbackPercentage = (countTotalFeedback === 0\n      ? 0\n      : (good * 100) / countTotalFeedback\n    ).toFixed();\n\n    return (\n      <Section\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        onEddGood={eddGood}\n        onEddNeutral={eddNeutral}\n        onEddBad={eddBad}\n        onCountTotalFeedback={countTotalFeedback}\n        onCountPositiveFeedbackPercentage={countPositiveFeedbackPercentage}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2TaV8\"};"],"sourceRoot":""}